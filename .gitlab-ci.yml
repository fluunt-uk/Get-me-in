variables:
  PACKAGE_PATH: /go/src/gitlab.com/ProjectReferral/Get-me-in

before_script:
  - docker info

stages:
  - dep
  - test
  - build

.anchors:
  - &inject-gopath
      mkdir -p $(dirname ${PACKAGE_PATH})
      && ln -s ${CI_PROJECT_DIR} ${PACKAGE_PATH}
      && cd ${PACKAGE_PATH}

dep:
  stage: dep
  image: golang:1.10-alpine3.7
  before_script:
    - apk add --no-cache curl git
    - curl -sSL https://github.com/golang/dep/releases/download/v0.5.0/dep-linux-amd64 -o /go/bin/dep
    - chmod +x /go/bin/dep
    - *inject-gopath
  script:
    - dep ensure -v -vendor-only
  artifacts:
    name: "vendor-$CI_PIPELINE_ID"
    paths:
      - vendor/
    expire_in: 1 hour

#
# before_script:
# # Create a symbolic link under $GOPATH, this is needed for local build
#     - cd $GOPATH/src
#     - mkdir -p gitlab.com/$CI_PROJECT_NAMESPACE/$CI_NAME
#     - cd gitlab.com/$CI_PROJECT_NAMESPACE/$CI_NAME
#     - ln -s $CI_PROJECT_DIR
#     - export CC=clang-5.0
#     - cd $CI_NAME


build:
  stage: build
  dependencies:
    - dep
  image: docker:17
  services:
    - docker:dind
  script:
    -  go get -v -t -d ./account-api/...
    -  go build -v ./account-api/cmd
    -  go get -v -t -d ./marketing-api/...
    -  go build -v ./marketing-api/cmd
    -  go get -v -t -d ./auth-api/...
    -  go build -v ./auth-api/cmd
